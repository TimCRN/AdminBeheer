name: Publish & Deploy

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: adminmanagement

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file AdminManagement/Dockerfile
          fi

  # Push image to GitHub Packages & Docker Hub.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    environment:
      name: Production

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2        
      
      - name: Log into Docker Hub Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Log into GitHub Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Push 2 Hub        
        uses: docker/build-push-action@v2
        with:
          context: .
          file: AdminManagement/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/adminmanagement:latest
          
      - name: Push 2 GitPackages
        uses: docker/build-push-action@v2
        with:
          context: .
          file: AdminManagement/Dockerfile
          push: true
          tags: docker.pkg.github.com/timcrn/adminbeheer/adminmanagement:latest
          
  deploy:
    needs: push
    
    runs-on: ubuntu-latest
    
    environment:
      name: Production
      
    steps:
      - uses: actions/checkout@v2
      
      - name: Throw SSH Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd AdminBeheer/
            docker pull timcrn/adminmanagement:latest
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
